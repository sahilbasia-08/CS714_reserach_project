{"ast":null,"code":"var _jsxFileName = \"/home/rubbish/secure_messaging_platform/client/src/components/InfoBar/InfoBar.js\";\nimport React from \"react\";\nimport onlineIcon from \"../../icons/onlineIcon.png\";\nimport closeIcon from \"../../icons/closeIcon.png\";\nimport \"./InfoBar.css\";\n\n/**\n * Props:\n * - user_room: string (display name / id of the room)\n * - onLeave?: function (optional). If not provided, falls back to redirect \"/\"\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoBar = ({\n  user_room,\n  onLeave\n}) => {\n  const handleLeave = () => {\n    if (typeof onLeave === \"function\") {\n      onLeave();\n      return;\n    }\n    // fallback: soft redirect (no target=_self anchor to avoid full reload artifacts)\n    window.location.href = \"/\";\n  };\n  const handleCopy = async () => {\n    try {\n      if (!user_room) return;\n      await navigator.clipboard.writeText(String(user_room));\n      // quick, non-intrusive feedback\n      // eslint-disable-next-line no-alert\n      console.log(\"Room copied\");\n    } catch (e) {\n      console.warn(\"Copy failed\", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"infoBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftInnerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"onlineIcon\",\n        src: onlineIcon,\n        alt: \"online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        title: user_room || \"\",\n        children: user_room || \"Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightInnerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"iconBtn\",\n        \"aria-label\": \"Copy room\",\n        title: \"Copy room\",\n        onClick: handleCopy,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: onlineIcon,\n          alt: \"\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"iconBtn\",\n        \"aria-label\": \"Leave\",\n        title: \"Leave\",\n        onClick: handleLeave,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeIcon,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = InfoBar;\nexport default InfoBar;\nvar _c;\n$RefreshReg$(_c, \"InfoBar\");","map":{"version":3,"names":["React","onlineIcon","closeIcon","jsxDEV","_jsxDEV","InfoBar","user_room","onLeave","handleLeave","window","location","href","handleCopy","navigator","clipboard","writeText","String","console","log","e","warn","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","type","onClick","_c","$RefreshReg$"],"sources":["/home/rubbish/secure_messaging_platform/client/src/components/InfoBar/InfoBar.js"],"sourcesContent":["import React from \"react\";\n\nimport onlineIcon from \"../../icons/onlineIcon.png\";\nimport closeIcon from \"../../icons/closeIcon.png\";\n\nimport \"./InfoBar.css\";\n\n/**\n * Props:\n * - user_room: string (display name / id of the room)\n * - onLeave?: function (optional). If not provided, falls back to redirect \"/\"\n */\nconst InfoBar = ({ user_room, onLeave }) => {\n  const handleLeave = () => {\n    if (typeof onLeave === \"function\") {\n      onLeave();\n      return;\n    }\n    // fallback: soft redirect (no target=_self anchor to avoid full reload artifacts)\n    window.location.href = \"/\";\n  };\n\n  const handleCopy = async () => {\n    try {\n      if (!user_room) return;\n      await navigator.clipboard.writeText(String(user_room));\n      // quick, non-intrusive feedback\n      // eslint-disable-next-line no-alert\n      console.log(\"Room copied\");\n    } catch (e) {\n      console.warn(\"Copy failed\", e);\n    }\n  };\n\n  return (\n    <div className=\"infoBar\">\n      <div className=\"leftInnerContainer\">\n        {/* tiny status dot; using your asset keeps bundle consistent */}\n        <img className=\"onlineIcon\" src={onlineIcon} alt=\"online\" />\n        <h3 title={user_room || \"\"}>\n          {user_room || \"Room\"}\n        </h3>\n      </div>\n\n      <div className=\"rightInnerContainer\">\n        {/* copy room id/name (handy for sharing) */}\n        <button\n          type=\"button\"\n          className=\"iconBtn\"\n          aria-label=\"Copy room\"\n          title=\"Copy room\"\n          onClick={handleCopy}\n        >\n          {/* reuse the online icon as a simple glyph; replace with a dedicated copy icon if you add one */}\n          <img src={onlineIcon} alt=\"\" aria-hidden=\"true\" />\n        </button>\n\n        {/* leave/close */}\n        <button\n          type=\"button\"\n          className=\"iconBtn\"\n          aria-label=\"Leave\"\n          title=\"Leave\"\n          onClick={handleLeave}\n        >\n          <img src={closeIcon} alt=\"\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}